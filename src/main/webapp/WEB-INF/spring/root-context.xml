<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.1.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd">
	
	<!-- Root Context: defines shared resources visible to all other web components -->
		
	<!-- JNDI 등록 : Mybatis가 아닌, spring이 접속객체를 주도한다.
		왜? 스프링이 트랜잭션을 관리하므로. -->
	<jee:jndi-lookup 
		id="dataSource" 
		jndi-name="jdbc/oracle"
		resource-ref="true"/>
		
	<!-- 각 기술에 맞는 트랜잭션 객체를 등록한다
		Ex) Hibernate 사용시 : HibernateTransactionManager 
		Ex) JDBC 사용시 : DataSourceTransactionManager
		Ex) Mybatis 사용시 : DataSourceTransactionManager -->
	<bean id="dataSourceTransactionManager" 
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager"
		p:dataSource-ref="dataSource"/>
	
	<!-- Spring JDBC 사용시 -->
	<bean id="jdbcTemplate" 
		class="org.springframework.jdbc.core.JdbcTemplate" 
		p:dataSource-ref="dataSource"/>
		
	<!-- Mybatis Spring -->
	<bean id="sqlSessionFactoryBean" 
		class="org.mybatis.spring.SqlSessionFactoryBean"
		p:dataSource-ref="dataSource"
		p:configLocation="classpath:com/project/cinderella/mybatis/config/config.xml"/>
		
	<bean id="sqlSessionTemplate"
		class="org.mybatis.spring.SqlSessionTemplate" >
		<constructor-arg ref="sqlSessionFactoryBean"/>	
	</bean>
	
	<!-- 파일 매니저 등록 -->
	<!-- <bean id="fileManager" class="com.koreait.fashionshop.common.FileManager">
		<property name="saveDir" 
			value="C:/Korea_IT_Academy/workspace/javaee2_workspace/FashionShop/src/main/webapp/resources/data" />
	</bean> -->
	
	<!-- 모델 영역은 모든 서블릿에서 공용으로 사용할 예정이므로, ServletContext 수준에서 등록되어야 한다.
		어플리케이션이 가동될 때 부터 등록되어 있어야 한다 -->
	<context:component-scan base-package="com.project.cinderella">
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
	</context:component-scan>
	
</beans>
